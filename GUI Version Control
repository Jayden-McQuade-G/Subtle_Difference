import os
from tkinter import *
from PIL import Image, ImageTk

# Initialize the main window
window = Tk()
window.title('Subtle Differences Image Caption')
window.geometry("800x450")  # Adjusted size for space below

# Path to the directory containing image pairs
val_folder = r"C:\Users\lsxln\Desktop\2024_ISA\Train-Val-DS\val"  # Update to your val folder path

# Retrieve all image paths in the folder
image_files = [os.path.join(val_folder, f) for f in os.listdir(val_folder) if f.endswith(('.jpg', '.png'))]
image_pairs = list(zip(image_files[::2], image_files[1::2]))  # Pair consecutive images

# Check if there are image pairs in the folder
if not image_pairs:
    print("No image pairs found in the specified folder.")
    window.destroy()

# Variables to keep track of the current image pair index
current_index = 0

# Function to load and resize images
def load_image(path, size=(150, 100)):
    img = Image.open(path).resize(size, Image.LANCZOS)
    return ImageTk.PhotoImage(img)

# Function to update images when the "Change" button is clicked
def update_images():
    global current_index, photo1, photo2
    
    # Load and display the current image pair
    image_path1, image_path2 = image_pairs[current_index]
    photo1 = load_image(image_path1)
    photo2 = load_image(image_path2)
    
    img_label1.config(image=photo1)
    img_label2.config(image=photo2)

    # Move to the next image pair, looping back if needed
    current_index = (current_index + 1) % len(image_pairs)

# Frame to hold the table
table_frame = Frame(window)
table_frame.pack(expand=True, fill=BOTH)

# Header and image placeholders
Label(table_frame, text="Example", relief=RIDGE).grid(row=0, column=0, padx=1, pady=1, sticky="nsew")
img_label1 = Label(table_frame, relief=RIDGE)
img_label1.grid(row=0, column=1, padx=1, pady=1, sticky="nsew")

img_label2 = Label(table_frame, relief=RIDGE)
img_label2.grid(row=0, column=2, padx=1, pady=1, sticky="nsew")

# Add rows for Color, Shape, and Texture without images in these sections
Label(table_frame, text="Color", relief=RIDGE).grid(row=1, column=0, padx=1, pady=1, sticky="nsew")
Label(table_frame, text="The china cabinet in Image 2 has a darker look compared to Image 1.", wraplength=250, relief=RIDGE).grid(row=1, column=1, padx=1, pady=1, sticky="nsew")
Label(table_frame, text="The pencil case in Image 1 has darker blue in the zipper area compared to Image 2, which is grayish blue.", wraplength=250, relief=RIDGE).grid(row=1, column=2, padx=1, pady=1, sticky="nsew")

Label(table_frame, text="Shape", relief=RIDGE, bg="lightgrey").grid(row=2, column=0, padx=1, pady=1, sticky="nsew")
Label(table_frame, text="The china cabinet in Image 1 has more curved carvings on its base than Image 2.", wraplength=250, relief=RIDGE, bg="lightgrey").grid(row=2, column=1, padx=1, pady=1, sticky="nsew")
Label(table_frame, text="The pencil case in Image 1 is bulky compared to Image 2.", wraplength=250, relief=RIDGE, bg="lightgrey").grid(row=2, column=2, padx=1, pady=1, sticky="nsew")

Label(table_frame, text="Texture", relief=RIDGE).grid(row=3, column=0, padx=1, pady=1, sticky="nsew")
Label(table_frame, text="The china cabinet in Image 1 has a glossy finish compared to Image 2.", wraplength=250, relief=RIDGE).grid(row=3, column=1, padx=1, pady=1, sticky="nsew")
Label(table_frame, text="The pencil case in Image 1 is glossy compared to Image 2.", wraplength=250, relief=RIDGE).grid(row=3, column=2, padx=1, pady=1, sticky="nsew")

# Add "Change" button below the table to cycle through images
change_button = Button(window, text="Change", command=update_images)
change_button.pack(pady=10)

# Responsive layout configuration
for i in range(3):
    table_frame.columnconfigure(i, weight=1)
for i in range(4):
    table_frame.rowconfigure(i, weight=1)

# Initialize by displaying the first image pair
update_images()

# Run the Tkinter main loop
window.mainloop()
