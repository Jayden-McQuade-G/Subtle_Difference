from tkinter import *
from tkinter import ttk
from PIL import Image, ImageTk

# Initialize the main window
window = Tk()
window.title('Subtle Differences Image Caption')
window.geometry("800x400")  # Adjusted size

# Function to create a table cell with an optional background color or image
def create_cell(frame, text=None, row=0, col=0, bg_color=None, image=None, wraplength=200):
    # If both image and text are provided, create a frame to hold both
    if image and text:
        cell_frame = Frame(frame, relief=RIDGE, bd=1)
        cell_frame.grid(row=row, column=col, padx=1, pady=1, sticky="nsew")
        
        img_label = Label(cell_frame, image=image)
        img_label.image = image  # Keep a reference to avoid garbage collection
        img_label.pack()

        text_label = Label(cell_frame, text=text, wraplength=wraplength, anchor="center")
        text_label.pack()

        return cell_frame  # Return the frame with both image and text

    elif image:
        # Only display the image if no text is provided
        cell = Label(frame, image=image, relief=RIDGE)
        cell.image = image  # Keep a reference to avoid garbage collection
        cell.grid(row=row, column=col, padx=1, pady=1, sticky="nsew")
        return cell  # Return the image cell
        
    else:
        # Only display text
        cell = Label(frame, text=text, relief=RIDGE, wraplength=wraplength, justify=LEFT, anchor="w")
        if bg_color:
            cell.config(bg=bg_color)
        cell.grid(row=row, column=col, padx=1, pady=1, sticky="nsew")
        return cell  # Return the text cell

# Main frame to hold the table
table_frame = Frame(window)
table_frame.pack(expand=True, fill=BOTH)

# Load an image and resize it to fit a reasonable cell size
image_path = r"C:\Users\lsxln\Desktop\2024_ISA\small_image.jpg"  # Replace with your image path
img = Image.open(image_path)
img = img.resize((150, 100), Image.LANCZOS)  # Resize image to fit within the cell
photo = ImageTk.PhotoImage(img)

# Create headers
create_cell(table_frame, "Example", 0, 0, bg_color="white")
create_cell(table_frame, text="Image 1", row=0, col=1, image=photo)  # Place image with "Image 1" text
create_cell(table_frame, "Image 2", 0, 2, bg_color="white")

# Add rows for Color, Shape, and Texture with auto-resizing based on content
create_cell(table_frame, "Color", 1, 0, bg_color="white")
create_cell(table_frame, "The china cabinet in Image 2 has a darker look compared to Image 1.", 1, 1, wraplength=250)
create_cell(table_frame, "The pencil case in Image 1 has darker blue in the zipper area compared to Image 2, which is grayish blue.", 1, 2, wraplength=250)

create_cell(table_frame, "Shape", 2, 0, bg_color="lightgrey")
create_cell(table_frame, "The china cabinet in Image 1 has more curved carvings on its base than Image 2.", 2, 1, wraplength=250, bg_color="lightgrey")
create_cell(table_frame, "The pencil case in Image 1 is bulky compared to Image 2.", 2, 2, wraplength=250, bg_color="lightgrey")

create_cell(table_frame, "Texture", 3, 0, bg_color="white")
create_cell(table_frame, "The china cabinet in Image 1 has a glossy finish compared to Image 2.", 3, 1, wraplength=250)
create_cell(table_frame, "The pencil case in Image 1 is glossy compared to Image 2.", 3, 2, wraplength=250)

# Configure grid layout to be responsive to content
for i in range(3):
    table_frame.columnconfigure(i, weight=1)
for i in range(4):
    table_frame.rowconfigure(i, weight=1)

# Start the Tkinter main loop
window.mainloop()
